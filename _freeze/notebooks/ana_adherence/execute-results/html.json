{
  "hash": "9580ad6cdb0cbf755c000f9399fe060e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"EMA adherence\" \nauthor: \"Kendra Wyant\"\ndate: \"2024-10-02\"\nformat: \n  html: \n    embed-resources: true\n    toc: true \n    toc_depth: 4\neditor_options: \n  chunk_output_type: console\n--- \n\n\n\n\n\nPurpose: This file calculates overall weekly EMA adherence using EMA survey data (`survey_daily.csv`). \n\n## Set up\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| message: false\n#| warning: false\n#| code-fold: true\n\noptions(conflicts.policy = \"depends.ok\")\nlibrary(tidyverse) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| message: false\n#| warning: false\n#| code-fold: true\n\nlibrary(lubridate)\nlibrary(skimr)\nlibrary(DiagrammeR) # for flowchart\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'DiagrammeR' was built under R version 4.4.1\n```\n\n\n:::\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| message: false\n#| warning: false\n#| code-fold: true\n\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"a58e57da996d1b70bb9a5b58241325d6fd78890f\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| message: false\n#| warning: false\n#| code-fold: true\n\ntheme_set(theme_classic())\n\npath_burden <- format_path(\"studydata/risk2/data_processed/burden2\")\npath_shared <- format_path(\"studydata/risk2/data_processed/shared\")\n```\n:::\n\n\n\n\n### Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nema <- read_csv(here::here(path_shared, \"survey_daily.csv\"),\n                show_col_types = FALSE)\n\nmonthly <- read_csv(here::here(path_shared, \"generic_monthly_wide.csv\"),\n                show_col_types = FALSE) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nburden_quant <- read_csv(here::here(path_burden, \"burden_quant.csv\"),\n                   show_col_types = FALSE)\nburden_qual <- read_csv(here::here(path_burden, \"burden_qual.csv\"),\n                   show_col_types = FALSE)\n```\n:::\n\n\n\nburden subids\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nburden_subids <- burden_quant |> \n  pull(subid) |>\n  unique()\n```\n:::\n\n\n\n\n\n### Disposition   \n\nStudy start and end dates for each subid\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstudy_start <- ema |> \n  group_by(subid) |> \n  arrange(start_date) |> \n  slice(1) |> \n  ungroup() |> \n  mutate(study_start = as_date(start_date)) |> \n  select(subid, study_start)\n\nstudy_end <- ema |> \n  group_by(subid) |> \n  arrange(desc(start_date)) |> \n  slice(1) |> \n  ungroup() |> \n  mutate(study_end = as_date(start_date)) |> \n  select(subid, study_end)\n\ndates <- study_start |> \n  full_join(study_end, by = \"subid\") |> \n  mutate(study_days = study_end - study_start)\n```\n:::\n\n\n\nDays on study     \n\n336 participants started study/provided at least one month of EMA.   \n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndates |> \n  skim(study_days) |> \n  yank(\"difftime\")\n```\n\n::: {.cell-output-display}\n\n\n**Variable type: difftime**\n\n|skim_variable | n_missing| complete_rate|min     |max      |median   | n_unique|\n|:-------------|---------:|-------------:|:-------|:--------|:--------|--------:|\n|study_days    |         0|             1|31 days |416 days |353 days |      157|\n\n\n\n:::\n:::\n\n\n\nFor participants who completed burden study:    \nMin days on study = 122 days (all participants provided data for at least 4 months)\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndates |> \n  filter(subid %in% burden_subids) |>\n  skim(study_days) |> \n  yank(\"difftime\")\n```\n\n::: {.cell-output-display}\n\n\n**Variable type: difftime**\n\n|skim_variable | n_missing| complete_rate|min      |max      |median   | n_unique|\n|:-------------|---------:|-------------:|:--------|:--------|:--------|--------:|\n|study_days    |         0|             1|122 days |416 days |358 days |      103|\n\n\n\n:::\n:::\n\n\n\n\nDisposition of participants by month     \n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| code-fold: true\n#|\nmonth_1 <- dates |> \n  filter(study_days >= 30) |> \n  nrow()\n\nmonth_2 <- dates |> \n  filter(study_days >= 60)  |> \n  nrow()\n\nmonth_3 <- dates |> \n  filter(study_days >= 90)  |> \n  nrow()\n\nmonth_4 <- dates |> \n  filter(study_days >= 120)  |> \n  nrow()\n\nmonth_4_burden <- dates |>\n  filter(study_days >= 120)  |> \n  filter(subid %in% burden_subids)  |> \n  nrow()\n\nmonth_5 <- dates |> \n  filter(study_days >= 150)  |> \n  nrow()\n\nmonth_6 <- dates |>\n  filter(study_days >= 180)  |> \n  nrow()\n\nmonth_7 <- dates |>\n  filter(study_days >= 210)  |> \n  nrow()\n\nmonth_8 <- dates |>\n  filter(study_days >= 240)  |> \n  nrow()\n\nmonth_9 <- dates |>\n  filter(study_days >= 270)  |> \n  nrow()\n\nmonth_10 <- dates |>\n  filter(study_days >= 300)  |> \n  nrow()\n\nmonth_11 <- dates |>\n  filter(study_days >= 330) |> \n  nrow()\n\nmonth_12 <- dates |>\n  filter(study_days >= 360) |> \n  nrow()\n```\n:::\n\n\n\n**Some participants on study past 4 months but have no burden data**\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| code-fold: true\n\nDiagrammeR::grViz(\"\n  digraph {\n  \n  node [fontname = 'Arial', shape = rectangle, fixedsize = true, width = 1.7, height = .6]\n  a [label = '@@1']\n  b [label = '@@2']\n  c [label = '@@3']\n  d1 [label = '@@4']\n  d2 [label = '@@5', color = crimson]\n  e1 [label = '@@6']\n  f1 [label = '@@7']\n  g1 [label = '@@8']\n  h1 [label = '@@9']\n  i1 [label = '@@10']\n  j1 [label = '@@11']\n  k1 [label = '@@12']\n  l1 [label = '@@13']\n  \n  \n  {rank = same; d1; d2}\n  a -> b\n  b -> c\n  c -> d1 -> d2\n  d1 -> e1 -> f1 -> g1 -> h1 -> i1 -> j1 -> k1 -> l1\n  }\n  \n  [1]: paste('Month 1\\\\n', 'N = ', month_1)\n  [2]: str_c('Month 2\\\\n', 'N = ', month_2) \n  [3]: str_c('Month 3\\\\n', 'N = ', month_3)\n  [4]: str_c('Month 4\\\\n', 'N = ', month_4)\n  [5]: str_c('Month 4 + Survey\\\\n', 'N = ', month_4_burden)\n  [6]: str_c('Month 5\\\\n', 'N = ', month_5)\n  [7]: str_c('Month 6\\\\n', 'N = ', month_6)\n  [8]: str_c('Month 7\\\\n', 'N = ', month_7)\n  [9]: str_c('Month 8\\\\n', 'N = ', month_8)\n  [10]: str_c('Month 9\\\\n', 'N = ', month_9)\n  [11]: str_c('Month 10\\\\n', 'N = ', month_10)\n  [12]: str_c('Month 11\\\\n', 'N = ', month_11)\n  [13]: str_c('Month 12\\\\n', 'N = ', month_12)\n  \", height = \"1000px\") \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"htmlwidget-a59e3163ccb30a285b28\" style=\"width:672px;height:1000px;\" class=\"grViz html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-a59e3163ccb30a285b28\">{\"x\":{\"diagram\":\"\\n  digraph {\\n  \\n  node [fontname = \\\"Arial\\\", shape = rectangle, fixedsize = true, width = 1.7, height = .6]\\n  a [label = \\\"Month 1\\n N =  336\\\"]\\n  b [label = \\\"Month 2\\nN = 319\\\"]\\n  c [label = \\\"Month 3\\nN = 306\\\"]\\n  d1 [label = \\\"Month 4\\nN = 290\\\"]\\n  d2 [label = \\\"Month 4 + Survey\\nN = 247\\\", color = crimson]\\n  e1 [label = \\\"Month 5\\nN = 275\\\"]\\n  f1 [label = \\\"Month 6\\nN = 267\\\"]\\n  g1 [label = \\\"Month 7\\nN = 260\\\"]\\n  h1 [label = \\\"Month 8\\nN = 248\\\"]\\n  i1 [label = \\\"Month 9\\nN = 236\\\"]\\n  j1 [label = \\\"Month 10\\nN = 220\\\"]\\n  k1 [label = \\\"Month 11\\nN = 203\\\"]\\n  l1 [label = \\\"Month 12\\nN = 117\\\"]\\n  \\n  \\n  {rank = same; d1; d2}\\n  a -> b\\n  b -> c\\n  c -> d1 -> d2\\n  d1 -> e1 -> f1 -> g1 -> h1 -> i1 -> j1 -> k1 -> l1\\n  }\",\"config\":{\"engine\":\"dot\",\"options\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n### Daily Survey Overall Adherence \n\nGet all study days for each subid\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# function to map over\nget_study_days <- function(the_subid, dates) {\n  study_start <- dates |>  filter(subid == the_subid) |>  pull(study_start)\n  study_end <- dates |>  filter(subid == the_subid) |> pull(study_end)\n  study_days <- tibble(subid = the_subid, study_day = seq(study_start, study_end - days(1), by = \"day\")) \n  return(study_days)\n}\n\nstudy_dates <- dates$subid |> \n  map_dfr(~get_study_days(.x, dates))\n```\n:::\n\n\n\n\nCount surveys per study day (day starts at 6 am) \n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nema_count <- ema |>\n  mutate(study_day = if_else(hour(start_date) >= 6, \n                        as_date(start_date),\n                        as_date(start_date) - days(1))) |> \n  count(subid, study_day) \n\n\nema_count <- ema_count |> \n  mutate(n = if_else(n > 1, 1, n))\n```\n:::\n\n\n\nAdd counts to study dates\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncount_study_dates <- study_dates |> \n  left_join(ema_count, by = c(\"subid\", \"study_day\")) |> \n  mutate(n = if_else(is.na(n), 0, n)) |> \n  mutate(n_prompts = 1) \n```\n:::\n\n\n\n\ncalculate mean adherence\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmean_ema <- count_study_dates |> \n  group_by(subid) |> \n  summarize(n_total = sum(n), prompt_total = sum(n_prompts)) |> \n  mutate(mean = n_total/prompt_total) |> \n  ungroup() |> \n  summarize(mean = mean(mean))\n```\n:::\n\n\n\n\n**On average participants (N = 336) completed 0.72 daily surveys each day they were on study. That is their overall adherence for a once daily EMA was 72%.**    \n\n\nHist of overall adherence by subid\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| code-fold: true\n\ncount_study_dates |> \n  group_by(subid) |> \n  summarise(n_total = sum(n),\n            n_prompts = sum(n_prompts)) |> \n  mutate(adherence = n_total/n_prompts) |> \n  ggplot(aes(x = adherence)) +\n  geom_histogram(color = \"black\", fill = \"light grey\", binwidth = .1, center = .55) +\n  scale_x_continuous(breaks = c(0, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.0)) +\n  labs(y = \"Frequency\", x = \"Proportion of daily survey's completed\",\n       subtitle = \"Daily Survey Adherence (N = 336)\") +\n  geom_vline(aes(xintercept = mean_ema$mean), linewidth = .3) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](ana_adherence_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n### Daily Survey Adherence over time \n\n   \nQuite a few people have over 365 days of EMA. *Lose these in adherence over 12 month plot*.    \n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndates |> \n  mutate(n = study_end - study_start) |> \n  arrange(desc(n)) |> \n  filter(n > 365) |> \n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 70 × 5\n   subid study_start study_end  study_days n       \n   <dbl> <date>      <date>     <drtn>     <drtn>  \n 1  1152 2022-09-06  2023-10-27 416 days   416 days\n 2  1200 2022-11-01  2023-12-22 416 days   416 days\n 3  1146 2022-08-16  2023-10-03 413 days   413 days\n 4  1286 2023-03-01  2024-04-12 408 days   408 days\n 5  1211 2022-11-18  2023-12-28 405 days   405 days\n 6  1080 2022-05-10  2023-06-18 404 days   404 days\n 7  1197 2022-10-31  2023-12-08 403 days   403 days\n 8  1269 2023-02-06  2024-03-07 395 days   395 days\n 9  1168 2022-10-03  2023-10-31 393 days   393 days\n10  1352 2023-06-07  2024-07-02 391 days   391 days\n11  1035 2022-03-07  2023-04-01 390 days   390 days\n12  1070 2022-04-28  2023-05-22 389 days   389 days\n13  1071 2022-04-29  2023-05-23 389 days   389 days\n14  1036 2022-03-11  2023-04-03 388 days   388 days\n15  1044 2022-03-25  2023-04-17 388 days   388 days\n16  1302 2023-03-16  2024-04-07 388 days   388 days\n17  1029 2022-02-21  2023-03-15 387 days   387 days\n18  1030 2022-02-23  2023-03-16 386 days   386 days\n19  1046 2022-03-28  2023-04-18 386 days   386 days\n20  1122 2022-07-11  2023-08-01 386 days   386 days\n21  1249 2023-01-10  2024-01-31 386 days   386 days\n22  1371 2023-07-11  2024-07-31 386 days   386 days\n23  1380 2023-07-26  2024-08-15 386 days   386 days\n24  1384 2023-07-27  2024-08-16 386 days   386 days\n25  1012 2021-09-15  2022-10-05 385 days   385 days\n26  1112 2022-06-27  2023-07-17 385 days   385 days\n27  1148 2022-08-19  2023-09-08 385 days   385 days\n28  1033 2022-03-03  2023-03-22 384 days   384 days\n29  1048 2022-03-29  2023-04-17 384 days   384 days\n30  1038 2022-03-14  2023-03-31 382 days   382 days\n31  1051 2022-03-31  2023-04-17 382 days   382 days\n32  1099 2022-06-13  2023-06-30 382 days   382 days\n33  1219 2022-12-02  2023-12-19 382 days   382 days\n34  1222 2022-12-02  2023-12-19 382 days   382 days\n35  1113 2022-06-27  2023-07-13 381 days   381 days\n36  1039 2022-03-14  2023-03-29 380 days   380 days\n37  1198 2022-10-31  2023-11-15 380 days   380 days\n38  1356 2023-06-14  2024-06-28 380 days   380 days\n39  1066 2022-04-27  2023-05-11 379 days   379 days\n40  1201 2022-11-01  2023-11-15 379 days   379 days\n41  1216 2022-12-01  2023-12-15 379 days   379 days\n42  1218 2022-12-01  2023-12-15 379 days   379 days\n43  1220 2022-12-01  2023-12-15 379 days   379 days\n44  1306 2023-03-21  2024-04-03 379 days   379 days\n45  1050 2022-03-31  2023-04-13 378 days   378 days\n46  1278 2023-02-16  2024-02-29 378 days   378 days\n47  1061 2022-04-22  2023-05-02 375 days   375 days\n48  1395 2023-08-10  2024-08-19 375 days   375 days\n49  1041 2022-03-17  2023-03-25 373 days   373 days\n50  1411 2023-09-19  2024-09-25 372 days   372 days\n51  1037 2022-03-14  2023-03-20 371 days   371 days\n52  1297 2023-03-09  2024-03-14 371 days   371 days\n53  1399 2023-08-22  2024-08-27 371 days   371 days\n54  1009 2021-05-04  2022-05-09 370 days   370 days\n55  1006 2021-04-22  2022-04-25 368 days   368 days\n56  1023 2022-02-09  2023-02-12 368 days   368 days\n57  1079 2022-05-09  2023-05-12 368 days   368 days\n58  1153 2022-09-06  2023-09-09 368 days   368 days\n59  1182 2022-10-20  2023-10-23 368 days   368 days\n60  1188 2022-10-23  2023-10-26 368 days   368 days\n61  1312 2023-03-27  2024-03-29 368 days   368 days\n62  1388 2023-08-03  2024-08-05 368 days   368 days\n63  1401 2023-08-24  2024-08-26 368 days   368 days\n64  1031 2022-02-28  2023-03-02 367 days   367 days\n65  1081 2022-05-10  2023-05-12 367 days   367 days\n66  1367 2023-07-05  2024-07-06 367 days   367 days\n67  1068 2022-04-27  2023-04-28 366 days   366 days\n68  1160 2022-09-16  2023-09-17 366 days   366 days\n69  1324 2023-04-18  2024-04-18 366 days   366 days\n70  1337 2023-06-01  2024-06-01 366 days   366 days\n```\n\n\n:::\n:::\n\n\n\n\nSlice into 30 day bins \n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| code-fold: true\n\nstudy_months <- count_study_dates |> \n  group_by(subid) |> \n  slice(1:30) |> \n  mutate(month = 1) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(31:60) |> \n    mutate(month = 2)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(61:90) |> \n    mutate(month = 3)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(91:120) |> \n    mutate(month = 4)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(121:150) |> \n    mutate(month = 5)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(151:180) |> \n    mutate(month = 6)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(181:210) |> \n    mutate(month = 7)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(211:240) |> \n    mutate(month = 8)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(241:270) |> \n    mutate(month = 9)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(271:300) |> \n    mutate(month = 10)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(301:330) |> \n    mutate(month = 11)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(331:360) |> \n    mutate(month = 12)) |> \n  ungroup()\n```\n:::\n\n\n\n\nGet individual adherence scores \n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nema_month_adherence <- study_months |> \n  group_by(subid, month) |> \n  summarize(sum_n = sum(n), sum_prompts = sum(n_prompts), .groups = \"rowwise\") |> \n  mutate(adherence = sum_n/sum_prompts) |> \n  ungroup()\n```\n:::\n\n\n\nSummarize total adherence\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nema_month_adherence |> \n  group_by(month) |> \n  summarize(mean_adherence = mean(adherence)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 2\n   month mean_adherence\n   <dbl>          <dbl>\n 1     1          0.824\n 2     2          0.789\n 3     3          0.756\n 4     4          0.718\n 5     5          0.716\n 6     6          0.724\n 7     7          0.723\n 8     8          0.709\n 9     9          0.708\n10    10          0.707\n11    11          0.687\n12    12          0.696\n```\n\n\n:::\n:::\n\n\n\nPlot adherence by month\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| code-fold: true\n\nema_month_adherence |> \n  group_by(month) |> \n  summarize(mean_adherence = mean(adherence)) |> \n  ggplot(aes(x = month, y = mean_adherence)) +\n  geom_point() +\n  geom_line() +\n  theme_classic() +\n  scale_x_continuous(name = \"month\", \n                     breaks = seq(1, 12, 1)) +\n  scale_y_continuous(name = \"adherence\", \n                     breaks = seq(0, 1, .1), \n                     limits = c(0, 1)) +\n  labs(title = \"Daily survey adherence over time (N = 336) \") +\n  theme(legend.title = element_blank()) +\n  geom_hline(aes(yintercept = mean(mean_adherence)), linetype = \"dashed\", linewidth = .3)\n```\n\n::: {.cell-output-display}\n![](ana_adherence_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n\n### Monthly Survey Overall Adherence \n\nCount how many months on study \n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndates <- dates |> \n  mutate(study_months = floor(interval(study_start, study_end) / months(1)))\n```\n:::\n\n\n\nCount how many completed monthly surveys\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmonthly_count <-  dates |> \n  left_join(monthly |> \n  group_by(subid) |> \n  summarize(n = n()), by = \"subid\") |> \n  mutate(n_prompts = study_months,\n         n = if_else(n > n_prompts, n_prompts, n))\n```\n:::\n\n\n\ncalculate mean adherence\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmean_monthly <- monthly_count |> \n  group_by(subid) |> \n  mutate(mean = n/n_prompts) |> \n  ungroup() |> \n  summarize(mean = mean(mean))\n```\n:::\n\n\n\n\n**On average participants' (N = 336) overall adherence for the monthly survey was 96%.**    \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmonthly_count |> \n  group_by(subid) |> \n  mutate(mean = n/n_prompts,\n         adher_90 = if_else(mean >= .9, 1, 0)) |> \n  ungroup() |> \n  count(adher_90)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  adher_90     n\n     <dbl> <int>\n1        0    43\n2        1   293\n```\n\n\n:::\n:::\n\n\n\n**88% of participants completed at least 90% of their monthly surveys.**\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmonthly_count |> \n  group_by(subid) |> \n  mutate(mean = n/n_prompts,\n         adher_80 = if_else(mean >= .8, 1, 0)) |> \n  ungroup() |> \n  count(adher_80)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  adher_80     n\n     <dbl> <int>\n1        0    21\n2        1   315\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n316/336\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9404762\n```\n\n\n:::\n:::\n\n\n\n\nHist of overall adherence by subid\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| code-fold: true\n\nmonthly_count |> \n  group_by(subid) |> \n  mutate(adherence = n/n_prompts) |> \n  ggplot(aes(x = adherence)) +\n  geom_histogram(color = \"black\", fill = \"light grey\", binwidth = .1, center = .55) +\n  scale_x_continuous(breaks = c(0, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.0)) +\n  labs(y = \"Frequency\", x = \"Proportion of monthly survey's completed\",\n       subtitle = \"Monthly Survey Adherence (N = 336)\") +\n  geom_vline(aes(xintercept = mean_monthly$mean), linewidth = .3) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](ana_adherence_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "ana_adherence_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/viz-1.8.2/viz.js\"></script>\n<link href=\"../site_libs/DiagrammeR-styles-0.2/styles.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/grViz-binding-1.0.11/grViz.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}